

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Aug 03 15:08:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0001                     _TMR0	set	1
   367  000C                     _PIR1bits	set	12
   368  000B                     _INTCONbits	set	11
   369  0009                     _PORTE	set	9
   370  0008                     _PORTD	set	8
   371  0007                     _PORTC	set	7
   372  0005                     _PORTA	set	5
   373  001E                     _ADRESH	set	30
   374  0013                     _SSPBUF	set	19
   375  0014                     _SSPCON	set	20
   376  001F                     _ADCON0bits	set	31
   377  0063                     _SSPIF	set	99
   378  0066                     _ADIF	set	102
   379  0081                     _OPTION_REGbits	set	129
   380  0085                     _TRISAbits	set	133
   381  008C                     _PIE1bits	set	140
   382  0089                     _TRISE	set	137
   383  0088                     _TRISD	set	136
   384  0087                     _TRISC	set	135
   385  0085                     _TRISA	set	133
   386  008F                     _OSCCONbits	set	143
   387  0094                     _SSPSTATbits	set	148
   388  0094                     _SSPSTAT	set	148
   389  009F                     _ADCON1bits	set	159
   390  043B                     _TRISC3	set	1083
   391  043D                     _TRISC5	set	1085
   392  0188                     _ANSEL	set	392
   393  0189                     _ANSELH	set	393
   394                           
   395                           	psect	cinit
   396  000F                     start_initialization:	
   397                           ; #config settings
   398                           
   399  000F                     __initialization:
   400                           
   401                           ; Clear objects allocated to COMMON
   402  000F  01F5               	clrf	__pbssCOMMON& (0+127)
   403  0010  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   404  0011  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   405  0012  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
   406  0013                     end_of_initialization:	
   407                           ;End of C runtime variable initialization code
   408                           
   409  0013                     __end_of__initialization:
   410  0013  0183               	clrf	3
   411  0014  120A  118A  28DD   	ljmp	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMMON
   414  0075                     __pbssCOMMON:
   415  0075                     _flag_1:
   416  0075                     	ds	1
   417  0076                     _POT2:
   418  0076                     	ds	1
   419  0077                     _POT1:
   420  0077                     	ds	1
   421  0078                     _temporal:
   422  0078                     	ds	1
   423                           
   424                           	psect	cstackCOMMON
   425  0070                     __pcstackCOMMON:
   426  0070                     ?_setup:
   427  0070                     ?_ADC:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_spiReceiveWait:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ??_spiReceiveWait:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_spiWrite:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_spiWrite:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_spiRead:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ??_spiRead:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_isr:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?_main:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     spiWrite@dat:	
   455                           ; 1 bytes @ 0x0
   456                           
   457                           
   458                           ; 1 bytes @ 0x0
   459  0070                     	ds	1
   460  0071                     ??_isr:
   461                           
   462                           ; 1 bytes @ 0x1
   463  0071                     	ds	3
   464  0074                     ??_ADC:
   465  0074                     ??_spiInit:	
   466                           ; 1 bytes @ 0x4
   467                           
   468  0074                     spiInit@sType:	
   469                           ; 1 bytes @ 0x4
   470                           
   471                           
   472                           ; 1 bytes @ 0x4
   473  0074                     	ds	1
   474  0075                     ??_setup:
   475  0075                     ??_main:	
   476                           ; 1 bytes @ 0x5
   477                           
   478                           
   479                           	psect	cstackBANK0
   480  0020                     __pcstackBANK0:	
   481                           ; 1 bytes @ 0x5
   482                           
   483  0020                     ?_spiInit:
   484  0020                     spiInit@sDataSample:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 1 bytes @ 0x0
   489  0020                     	ds	1
   490  0021                     spiInit@sClockIdle:
   491                           
   492                           ; 1 bytes @ 0x1
   493  0021                     	ds	1
   494  0022                     spiInit@sTransmitEdge:
   495                           
   496                           ; 1 bytes @ 0x2
   497  0022                     	ds	1
   498                           
   499                           	psect	maintext
   500  00DD                     __pmaintext:	
   501 ;;
   502 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   503 ;;
   504 ;; *************** function _main *****************
   505 ;; Defined at:
   506 ;;		line 104 in file "lab3_slave_main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;		None
   509 ;; Auto vars:     Size  Location     Type
   510 ;;		None
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0, pclath, cstack
   515 ;; Tracked objects:
   516 ;;		On entry : B00/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         0       0       0       0       0
   521 ;;      Locals:         0       0       0       0       0
   522 ;;      Temps:          0       0       0       0       0
   523 ;;      Totals:         0       0       0       0       0
   524 ;;Total ram usage:        0 bytes
   525 ;; Hardware stack levels required when called:    5
   526 ;; This function calls:
   527 ;;		_setup
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _main
   535  00DD                     _main:
   536  00DD                     l973:	
   537                           ;incstack = 0
   538                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   539                           
   540  00DD  120A  118A  2067  120A  118A  	fcall	_setup
   541  00E2                     l117:
   542  00E2                     l118:
   543  00E2  28E2               	goto	l117
   544  00E3  120A  118A  280C   	ljmp	start
   545  00E6                     __end_of_main:
   546                           
   547                           	psect	text1
   548  0067                     __ptext1:	
   549 ;; *************** function _setup *****************
   550 ;; Defined at:
   551 ;;		line 114 in file "lab3_slave_main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    4
   572 ;; This function calls:
   573 ;;		_ADC
   574 ;;		_spiInit
   575 ;; This function is called by:
   576 ;;		_main
   577 ;; This function uses a non-reentrant model
   578 ;;
   579                           
   580                           
   581                           ;psect for function _setup
   582  0067                     _setup:
   583  0067                     l917:	
   584                           ;incstack = 0
   585                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   586                           
   587  0067  1683               	bsf	3,5	;RP0=1, select bank1
   588  0068  1303               	bcf	3,6	;RP1=0, select bank1
   589  0069  170F               	bsf	15,6	;volatile
   590  006A  168F               	bsf	15,5	;volatile
   591  006B  160F               	bsf	15,4	;volatile
   592  006C  140F               	bsf	15,0	;volatile
   593  006D                     l919:
   594  006D  1683               	bsf	3,5	;RP0=1, select bank3
   595  006E  1703               	bsf	3,6	;RP1=1, select bank3
   596  006F  0189               	clrf	9	;volatile
   597  0070                     l921:
   598  0070  3003               	movlw	3
   599  0071  0088               	movwf	8	;volatile
   600  0072                     l923:
   601  0072  3023               	movlw	35
   602  0073  1683               	bsf	3,5	;RP0=1, select bank1
   603  0074  1303               	bcf	3,6	;RP1=0, select bank1
   604  0075  0085               	movwf	5	;volatile
   605  0076                     l925:
   606  0076  3018               	movlw	24
   607  0077  0087               	movwf	7	;volatile
   608  0078                     l927:
   609  0078  0188               	clrf	8	;volatile
   610  0079                     l929:
   611  0079  0189               	clrf	9	;volatile
   612  007A                     l931:
   613  007A  1283               	bcf	3,5	;RP0=0, select bank0
   614  007B  1303               	bcf	3,6	;RP1=0, select bank0
   615  007C  0185               	clrf	5	;volatile
   616  007D                     l933:
   617  007D  0187               	clrf	7	;volatile
   618  007E                     l935:
   619  007E  0188               	clrf	8	;volatile
   620  007F                     l937:
   621  007F  0189               	clrf	9	;volatile
   622  0080                     l939:
   623  0080  120A  118A  20C7  120A  118A  	fcall	_ADC
   624  0085                     l941:
   625  0085  178B               	bsf	11,7	;volatile
   626  0086                     l943:
   627  0086  168B               	bsf	11,5	;volatile
   628  0087                     l945:
   629  0087  110B               	bcf	11,2	;volatile
   630  0088                     l947:
   631  0088  170B               	bsf	11,6	;volatile
   632  0089                     l949:
   633  0089  1283               	bcf	3,5	;RP0=0, select bank0
   634  008A  1303               	bcf	3,6	;RP1=0, select bank0
   635  008B  118C               	bcf	12,3	;volatile
   636  008C                     l951:
   637  008C  1683               	bsf	3,5	;RP0=1, select bank1
   638  008D  1303               	bcf	3,6	;RP1=0, select bank1
   639  008E  158C               	bsf	12,3	;volatile
   640  008F                     l953:
   641  008F  1685               	bsf	5,5	;volatile
   642  0090                     l955:
   643  0090  170C               	bsf	12,6	;volatile
   644  0091                     l957:
   645  0091  1283               	bcf	3,5	;RP0=0, select bank0
   646  0092  1303               	bcf	3,6	;RP1=0, select bank0
   647  0093  130C               	bcf	12,6	;volatile
   648  0094                     l959:
   649  0094  1683               	bsf	3,5	;RP0=1, select bank1
   650  0095  1303               	bcf	3,6	;RP1=0, select bank1
   651  0096  1281               	bcf	1,5	;volatile
   652  0097                     l961:
   653  0097  1181               	bcf	1,3	;volatile
   654  0098                     l963:
   655  0098  1501               	bsf	1,2	;volatile
   656  0099                     l965:
   657  0099  1481               	bsf	1,1	;volatile
   658  009A                     l967:
   659  009A  1401               	bsf	1,0	;volatile
   660  009B                     l969:
   661  009B  300A               	movlw	10
   662  009C  1283               	bcf	3,5	;RP0=0, select bank0
   663  009D  1303               	bcf	3,6	;RP1=0, select bank0
   664  009E  0081               	movwf	1	;volatile
   665  009F                     l971:
   666  009F  01A0               	clrf	spiInit@sDataSample
   667  00A0  01A1               	clrf	spiInit@sClockIdle
   668  00A1  01A2               	clrf	spiInit@sTransmitEdge
   669  00A2  3024               	movlw	36
   670  00A3  120A  118A  20A9  120A  118A  	fcall	_spiInit
   671  00A8                     l123:
   672  00A8  0008               	return
   673  00A9                     __end_of_setup:
   674                           
   675                           	psect	text2
   676  00A9                     __ptext2:	
   677 ;; *************** function _spiInit *****************
   678 ;; Defined at:
   679 ;;		line 12 in file "SPI.c"
   680 ;; Parameters:    Size  Location     Type
   681 ;;  sType           1    wreg     enum E1264
   682 ;;  sDataSample     1    0[BANK0 ] enum E1272
   683 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   684 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  sType           1    4[COMMON] enum E1264
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   696 ;;      Params:         0       3       0       0       0
   697 ;;      Locals:         1       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0
   699 ;;      Totals:         1       3       0       0       0
   700 ;;Total ram usage:        4 bytes
   701 ;; Hardware stack levels used:    1
   702 ;; Hardware stack levels required when called:    3
   703 ;; This function calls:
   704 ;;		Nothing
   705 ;; This function is called by:
   706 ;;		_setup
   707 ;; This function uses a non-reentrant model
   708 ;;
   709                           
   710                           
   711                           ;psect for function _spiInit
   712  00A9                     _spiInit:
   713                           
   714                           ;incstack = 0
   715                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   716                           ;spiInit@sType stored from wreg
   717  00A9  00F4               	movwf	spiInit@sType
   718  00AA                     l907:
   719                           
   720                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   721  00AA  1683               	bsf	3,5	;RP0=1, select bank1
   722  00AB  1303               	bcf	3,6	;RP1=0, select bank1
   723  00AC  1287               	bcf	7,5	;volatile
   724                           
   725                           ;SPI.c: 15:     if(sType & 0b00000100)
   726  00AD  1D74               	btfss	spiInit@sType,2
   727  00AE  28B0               	goto	u91
   728  00AF  28B1               	goto	u90
   729  00B0                     u91:
   730  00B0  28B9               	goto	l913
   731  00B1                     u90:
   732  00B1                     l909:
   733                           
   734                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   735  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   736  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   737  00B3  0822               	movf	spiInit@sTransmitEdge,w
   738  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   739  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   740  00B6  0094               	movwf	20	;volatile
   741  00B7                     l911:
   742                           
   743                           ;SPI.c: 18:         TRISC3 = 1;
   744  00B7  1587               	bsf	7,3	;volatile
   745                           
   746                           ;SPI.c: 19:     }
   747  00B8  28C1               	goto	l25
   748  00B9                     l913:
   749                           
   750                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   751  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   752  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   753  00BB  0820               	movf	spiInit@sDataSample,w
   754  00BC  0422               	iorwf	spiInit@sTransmitEdge,w
   755  00BD  1683               	bsf	3,5	;RP0=1, select bank1
   756  00BE  1303               	bcf	3,6	;RP1=0, select bank1
   757  00BF  0094               	movwf	20	;volatile
   758  00C0                     l915:
   759                           
   760                           ;SPI.c: 23:         TRISC3 = 0;
   761  00C0  1187               	bcf	7,3	;volatile
   762  00C1                     l25:	
   763                           ;SPI.c: 24:     }
   764                           
   765                           
   766                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   767  00C1  0874               	movf	spiInit@sType,w
   768  00C2  1283               	bcf	3,5	;RP0=0, select bank0
   769  00C3  1303               	bcf	3,6	;RP1=0, select bank0
   770  00C4  0421               	iorwf	spiInit@sClockIdle,w
   771  00C5  0094               	movwf	20	;volatile
   772  00C6                     l26:
   773  00C6  0008               	return
   774  00C7                     __end_of_spiInit:
   775                           
   776                           	psect	text3
   777  00C7                     __ptext3:	
   778 ;; *************** function _ADC *****************
   779 ;; Defined at:
   780 ;;		line 16 in file "ADC.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;		None
   783 ;; Auto vars:     Size  Location     Type
   784 ;;		None
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, status,2, status,0
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       0       0       0       0
   795 ;;      Locals:         0       0       0       0       0
   796 ;;      Temps:          1       0       0       0       0
   797 ;;      Totals:         1       0       0       0       0
   798 ;;Total ram usage:        1 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    3
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_setup
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           
   809                           ;psect for function _ADC
   810  00C7                     _ADC:
   811  00C7                     l715:	
   812                           ;incstack = 0
   813                           ; Regs used in _ADC: [wreg+status,2+status,0]
   814                           
   815                           
   816                           ;ADC.c: 18:         ADCON1bits.ADFM = 0;
   817  00C7  1683               	bsf	3,5	;RP0=1, select bank1
   818  00C8  1303               	bcf	3,6	;RP1=0, select bank1
   819  00C9  139F               	bcf	31,7	;volatile
   820                           
   821                           ;ADC.c: 19:         ADCON1bits.VCFG0 = 0;
   822  00CA  121F               	bcf	31,4	;volatile
   823                           
   824                           ;ADC.c: 20:         ADCON1bits.VCFG1 = 0;
   825  00CB  129F               	bcf	31,5	;volatile
   826  00CC                     l717:
   827                           
   828                           ;ADC.c: 22:         ADCON0bits.ADCS = 0b10;
   829  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   830  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   831  00CE  081F               	movf	31,w	;volatile
   832  00CF  393F               	andlw	-193
   833  00D0  3880               	iorlw	128
   834  00D1  009F               	movwf	31	;volatile
   835                           
   836                           ;ADC.c: 23:         ADCON0bits.CHS = 0;
   837  00D2  30C3               	movlw	-61
   838  00D3  059F               	andwf	31,f	;volatile
   839  00D4                     l719:
   840                           
   841                           ;ADC.c: 24:         ADCON0bits.ADON = 1;
   842  00D4  141F               	bsf	31,0	;volatile
   843  00D5                     l721:
   844                           
   845                           ;ADC.c: 25:         _delay((unsigned long)((50)*(8000000/4000000.0)));
   846  00D5  3021               	movlw	33
   847  00D6  00F4               	movwf	??_ADC
   848  00D7                     u107:
   849  00D7  0BF4               	decfsz	??_ADC,f
   850  00D8  28D7               	goto	u107
   851  00D9                     l723:
   852                           
   853                           ;ADC.c: 26:         ADCON0bits.GO = 1;
   854  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   855  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   856  00DB  149F               	bsf	31,1	;volatile
   857  00DC                     l9:
   858  00DC  0008               	return
   859  00DD                     __end_of_ADC:
   860                           
   861                           	psect	text4
   862  0017                     __ptext4:	
   863 ;; *************** function _isr *****************
   864 ;; Defined at:
   865 ;;		line 72 in file "lab3_slave_main.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;		None
   868 ;; Auto vars:     Size  Location     Type
   869 ;;		None
   870 ;; Return value:  Size  Location     Type
   871 ;;                  1    wreg      void 
   872 ;; Registers used:
   873 ;;		wreg, status,2, status,0, pclath, cstack
   874 ;; Tracked objects:
   875 ;;		On entry : 0/0
   876 ;;		On exit  : 0/0
   877 ;;		Unchanged: 0/0
   878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   879 ;;      Params:         0       0       0       0       0
   880 ;;      Locals:         0       0       0       0       0
   881 ;;      Temps:          3       0       0       0       0
   882 ;;      Totals:         3       0       0       0       0
   883 ;;Total ram usage:        3 bytes
   884 ;; Hardware stack levels used:    1
   885 ;; Hardware stack levels required when called:    2
   886 ;; This function calls:
   887 ;;		_spiRead
   888 ;;		_spiWrite
   889 ;; This function is called by:
   890 ;;		Interrupt level 1
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function _isr
   896  0017                     _isr:
   897  0017                     i1l803:
   898                           
   899                           ;lab3_slave_main.c: 74: 
   900  0017  1283               	bcf	3,5	;RP0=0, select bank0
   901  0018  1303               	bcf	3,6	;RP1=0, select bank0
   902  0019  1F0C               	btfss	12,6	;volatile
   903  001A  281C               	goto	u3_21
   904  001B  281D               	goto	u3_20
   905  001C                     u3_21:
   906  001C  2839               	goto	i1l823
   907  001D                     u3_20:
   908  001D                     i1l805:
   909                           
   910                           ;lab3_slave_main.c: 75:     PORTA = 0x00;
   911  001D  0375               	decf	_flag_1,w
   912  001E  1D03               	btfss	3,2
   913  001F  2821               	goto	u4_21
   914  0020  2822               	goto	u4_20
   915  0021                     u4_21:
   916  0021  2829               	goto	i1l813
   917  0022                     u4_20:
   918  0022                     i1l807:
   919                           
   920                           ;lab3_slave_main.c: 76:     PORTC = 0x00;
   921  0022  081E               	movf	30,w	;volatile
   922  0023  00F1               	movwf	??_isr
   923  0024  0871               	movf	??_isr,w
   924  0025  00F7               	movwf	_POT1
   925  0026                     i1l809:
   926                           
   927                           ;lab3_slave_main.c: 77:     PORTD = 0x00;
   928  0026  151F               	bsf	31,2	;volatile
   929  0027                     i1l811:
   930                           
   931                           ;lab3_slave_main.c: 78:     PORTE = 0x00;
   932  0027  01F5               	clrf	_flag_1
   933                           
   934                           ;lab3_slave_main.c: 79: 
   935  0028  2830               	goto	i1l819
   936  0029                     i1l813:
   937                           
   938                           ;lab3_slave_main.c: 80: 
   939  0029  081E               	movf	30,w	;volatile
   940  002A  00F1               	movwf	??_isr
   941  002B  0871               	movf	??_isr,w
   942  002C  00F6               	movwf	_POT2
   943  002D                     i1l815:
   944                           
   945                           ;lab3_slave_main.c: 81:     ADC();
   946  002D  111F               	bcf	31,2	;volatile
   947  002E                     i1l817:
   948                           
   949                           ;lab3_slave_main.c: 82: 
   950  002E  01F5               	clrf	_flag_1
   951  002F  0AF5               	incf	_flag_1,f
   952  0030                     i1l819:
   953                           
   954                           ;lab3_slave_main.c: 85:     INTCONbits.T0IE = 1;
   955  0030  130C               	bcf	12,6	;volatile
   956                           
   957                           ;lab3_slave_main.c: 86:     INTCONbits.T0IF = 0;
   958  0031  3027               	movlw	39
   959  0032  00F1               	movwf	??_isr
   960  0033                     u11_27:
   961  0033  0BF1               	decfsz	??_isr,f
   962  0034  2833               	goto	u11_27
   963  0035  2836               	nop2
   964  0036                     i1l821:
   965                           
   966                           ;lab3_slave_main.c: 87:     INTCONbits.PEIE = 1;
   967  0036  1283               	bcf	3,5	;RP0=0, select bank0
   968  0037  1303               	bcf	3,6	;RP1=0, select bank0
   969  0038  149F               	bsf	31,1	;volatile
   970  0039                     i1l823:
   971                           
   972                           ;lab3_slave_main.c: 90:     TRISAbits.TRISA5 = 1;
   973  0039  1D8C               	btfss	12,3	;volatile
   974  003A  283C               	goto	u5_21
   975  003B  283D               	goto	u5_20
   976  003C                     u5_21:
   977  003C  2860               	goto	i1l112
   978  003D                     u5_20:
   979  003D                     i1l825:
   980                           
   981                           ;lab3_slave_main.c: 91:     PIE1bits.ADIE = 1;
   982  003D  120A  118A  20E6  120A  118A  	fcall	_spiRead
   983  0042  00F1               	movwf	??_isr
   984  0043  0871               	movf	??_isr,w
   985  0044  00F8               	movwf	_temporal
   986  0045                     i1l827:
   987                           
   988                           ;lab3_slave_main.c: 92:     PIR1bits.ADIF = 0;
   989  0045  0378               	decf	_temporal,w
   990  0046  1D03               	btfss	3,2
   991  0047  2849               	goto	u6_21
   992  0048  284A               	goto	u6_20
   993  0049                     u6_21:
   994  0049  2851               	goto	i1l831
   995  004A                     u6_20:
   996  004A                     i1l829:
   997                           
   998                           ;lab3_slave_main.c: 93: 
   999  004A  0877               	movf	_POT1,w
  1000  004B  120A  118A  20F6  120A  118A  	fcall	_spiWrite
  1001                           
  1002                           ;lab3_slave_main.c: 94: 
  1003  0050  285D               	goto	i1l835
  1004  0051                     i1l831:
  1005  0051  3002               	movlw	2
  1006  0052  0678               	xorwf	_temporal,w
  1007  0053  1D03               	btfss	3,2
  1008  0054  2856               	goto	u7_21
  1009  0055  2857               	goto	u7_20
  1010  0056                     u7_21:
  1011  0056  285D               	goto	i1l835
  1012  0057                     u7_20:
  1013  0057                     i1l833:
  1014                           
  1015                           ;lab3_slave_main.c: 96:     OPTION_REGbits.PSA = 0;
  1016  0057  0876               	movf	_POT2,w
  1017  0058  120A  118A  20F6  120A  118A  	fcall	_spiWrite
  1018  005D                     i1l835:
  1019                           
  1020                           ;lab3_slave_main.c: 98:     OPTION_REGbits.PS1 = 1;
  1021  005D  1283               	bcf	3,5	;RP0=0, select bank0
  1022  005E  1303               	bcf	3,6	;RP1=0, select bank0
  1023  005F  118C               	bcf	12,3	;volatile
  1024  0060                     i1l112:
  1025  0060  0873               	movf	??_isr+2,w
  1026  0061  008A               	movwf	10
  1027  0062  0E72               	swapf	??_isr+1,w
  1028  0063  0083               	movwf	3
  1029  0064  0EFE               	swapf	btemp,f
  1030  0065  0E7E               	swapf	btemp,w
  1031  0066  0009               	retfie
  1032  0067                     __end_of_isr:
  1033                           
  1034                           	psect	intentry
  1035  0004                     __pintentry:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1038                           
  1039  0004                     interrupt_function:
  1040  007E                     saved_w	set	btemp
  1041  0004  00FE               	movwf	btemp
  1042  0005  0E03               	swapf	3,w
  1043  0006  00F2               	movwf	??_isr+1
  1044  0007  080A               	movf	10,w
  1045  0008  00F3               	movwf	??_isr+2
  1046  0009  120A  118A  2817   	ljmp	_isr
  1047                           
  1048                           	psect	text5
  1049  00F6                     __ptext5:	
  1050 ;; *************** function _spiWrite *****************
  1051 ;; Defined at:
  1052 ;;		line 34 in file "SPI.c"
  1053 ;; Parameters:    Size  Location     Type
  1054 ;;  dat             1    wreg     unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  dat             1    0[COMMON] unsigned char 
  1057 ;; Return value:  Size  Location     Type
  1058 ;;                  1    wreg      void 
  1059 ;; Registers used:
  1060 ;;		wreg
  1061 ;; Tracked objects:
  1062 ;;		On entry : 0/0
  1063 ;;		On exit  : 0/0
  1064 ;;		Unchanged: 0/0
  1065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1066 ;;      Params:         0       0       0       0       0
  1067 ;;      Locals:         1       0       0       0       0
  1068 ;;      Temps:          0       0       0       0       0
  1069 ;;      Totals:         1       0       0       0       0
  1070 ;;Total ram usage:        1 bytes
  1071 ;; Hardware stack levels used:    1
  1072 ;; This function calls:
  1073 ;;		Nothing
  1074 ;; This function is called by:
  1075 ;;		_isr
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           
  1080                           ;psect for function _spiWrite
  1081  00F6                     _spiWrite:
  1082                           
  1083                           ;incstack = 0
  1084                           ; Regs used in _spiWrite: [wreg]
  1085                           ;spiWrite@dat stored from wreg
  1086  00F6  00F0               	movwf	spiWrite@dat
  1087  00F7                     i1l739:
  1088                           
  1089                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1090  00F7  0870               	movf	spiWrite@dat,w
  1091  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1092  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1093  00FA  0093               	movwf	19	;volatile
  1094  00FB                     i1l35:
  1095  00FB  0008               	return
  1096  00FC                     __end_of_spiWrite:
  1097                           
  1098                           	psect	text6
  1099  00E6                     __ptext6:	
  1100 ;; *************** function _spiRead *****************
  1101 ;; Defined at:
  1102 ;;		line 39 in file "SPI.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;		None
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;		None
  1107 ;; Return value:  Size  Location     Type
  1108 ;;                  1    wreg      unsigned char 
  1109 ;; Registers used:
  1110 ;;		wreg, status,2, status,0, pclath, cstack
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         0       0       0       0       0
  1118 ;;      Temps:          0       0       0       0       0
  1119 ;;      Totals:         0       0       0       0       0
  1120 ;;Total ram usage:        0 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; Hardware stack levels required when called:    1
  1123 ;; This function calls:
  1124 ;;		_spiReceiveWait
  1125 ;; This function is called by:
  1126 ;;		_isr
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _spiRead
  1132  00E6                     _spiRead:
  1133  00E6                     i1l741:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1136                           
  1137                           
  1138                           ;SPI.c: 41:     spiReceiveWait();
  1139  00E6  120A  118A  20EF  120A  118A  	fcall	_spiReceiveWait
  1140  00EB                     i1l743:
  1141                           
  1142                           ;SPI.c: 42:     return(SSPBUF);
  1143  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1144  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1145  00ED  0813               	movf	19,w	;volatile
  1146  00EE                     i1l38:
  1147  00EE  0008               	return
  1148  00EF                     __end_of_spiRead:
  1149                           
  1150                           	psect	text7
  1151  00EF                     __ptext7:	
  1152 ;; *************** function _spiReceiveWait *****************
  1153 ;; Defined at:
  1154 ;;		line 29 in file "SPI.c"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;		None
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		None
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1168 ;;      Params:         0       0       0       0       0
  1169 ;;      Locals:         0       0       0       0       0
  1170 ;;      Temps:          0       0       0       0       0
  1171 ;;      Totals:         0       0       0       0       0
  1172 ;;Total ram usage:        0 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; This function calls:
  1175 ;;		Nothing
  1176 ;; This function is called by:
  1177 ;;		_spiRead
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           
  1182                           ;psect for function _spiReceiveWait
  1183  00EF                     _spiReceiveWait:
  1184  00EF                     i1l737:	
  1185                           ;incstack = 0
  1186                           ; Regs used in _spiReceiveWait: []
  1187                           
  1188  00EF                     i1l29:	
  1189                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1190                           
  1191  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  1192  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  1193  00F1  1C14               	btfss	20,0	;volatile
  1194  00F2  28F4               	goto	u2_21
  1195  00F3  28F5               	goto	u2_20
  1196  00F4                     u2_21:
  1197  00F4  28EF               	goto	i1l29
  1198  00F5                     u2_20:
  1199  00F5                     i1l32:
  1200  00F5  0008               	return
  1201  00F6                     __end_of_spiReceiveWait:
  1202  007E                     btemp	set	126	;btemp
  1203  007E                     wtemp0	set	126
  1204                           
  1205                           	psect	config
  1206                           
  1207                           ;Config register CONFIG1 @ 0x2007
  1208                           ;	Oscillator Selection bits
  1209                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1210                           ;	Watchdog Timer Enable bit
  1211                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1212                           ;	Power-up Timer Enable bit
  1213                           ;	PWRTE = ON, PWRT enabled
  1214                           ;	RE3/MCLR pin function select bit
  1215                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1216                           ;	Code Protection bit
  1217                           ;	CP = OFF, Program memory code protection is disabled
  1218                           ;	Data Code Protection bit
  1219                           ;	CPD = OFF, Data memory code protection is disabled
  1220                           ;	Brown Out Reset Selection bits
  1221                           ;	BOREN = OFF, BOR disabled
  1222                           ;	Internal External Switchover bit
  1223                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1224                           ;	Fail-Safe Clock Monitor Enabled bit
  1225                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1226                           ;	Low Voltage Programming Enable bit
  1227                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1228                           ;	In-Circuit Debugger Mode bit
  1229                           ;	DEBUG = 0x1, unprogrammed default
  1230  2007                     	org	8199
  1231  2007  20C4               	dw	8388
  1232                           
  1233                           ;Config register CONFIG2 @ 0x2008
  1234                           ;	Brown-out Reset Selection bit
  1235                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1236                           ;	Flash Program Memory Self Write Enable bits
  1237                           ;	WRT = OFF, Write protection off
  1238  2008                     	org	8200
  1239  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_ADC
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     456
                                _ADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _ADC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Aug 03 15:08:39 2021

                      l9 00DC              _SSPSTATbits 0094                       l25 00C1  
                     l26 00C6                       u90 00B1                       u91 00B0  
                    l123 00A8                      l117 00E2                      l118 00E2  
                    _ADC 00C7                      l721 00D5                      l723 00D9  
                    l715 00C7                      l717 00CC                      l719 00D4  
                    l911 00B7                      l913 00B9                      l921 0070  
                    l915 00C0                      l907 00AA                      l931 007A  
                    l923 0072                      l909 00B1                      l941 0085  
                    l933 007D                      l925 0076                      l917 0067  
                    l951 008C                      l943 0086                      l935 007E  
                    l927 0078                      l919 006D                      l961 0097  
                    l953 008F                      l945 0087                      l937 007F  
                    l929 0079                      l971 009F                      l963 0098  
                    l955 0090                      l947 0088                      l939 0080  
                    l965 0099                      l957 0091                      l949 0089  
                    l973 00DD                      l967 009A                      l959 0094  
                    l969 009B                      u107 00D7                      _isr 0017  
                   ?_ADC 0070                     _ADIF 0066                     ?_isr 0070  
                   i1l32 00F5                     i1l35 00FB                     i1l29 00EF  
                   i1l38 00EE                     _POT1 0077                     _POT2 0076  
                   _TMR0 0001                     u2_20 00F5                     u2_21 00F4  
                   u3_20 001D                     u3_21 001C                     u4_20 0022  
                   u4_21 0021                     u5_20 003D                     u5_21 003C  
                   u6_20 004A                     u6_21 0049                     u7_20 0057  
                   u7_21 0056                     _main 00DD                     btemp 007E  
                   start 000C                    ??_ADC 0074                    ??_isr 0071  
                  ?_main 0070                    _ANSEL 0188                    i1l112 0060  
                  i1l811 0027                    i1l803 0017                    i1l741 00E6  
                  i1l821 0036                    i1l813 0029                    i1l805 001D  
                  i1l743 00EB                    i1l831 0051                    i1l815 002D  
                  i1l807 0022                    i1l823 0039                    i1l737 00EF  
                  i1l833 0057                    i1l825 003D                    i1l817 002E  
                  i1l809 0026                    i1l739 00F7                    i1l835 005D  
                  i1l827 0045                    i1l819 0030                    i1l829 004A  
                  u11_27 0033                    _PORTA 0005                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _setup 0067                    pclath 000A  
        __end_of_spiInit 00C7          __end_of_spiRead 00EF                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00E6  
                 ??_main 0075                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   _flag_1 0075  
                 saved_w 007E         __end_of_spiWrite 00FC                ??_spiInit 0074  
              ??_spiRead 0070  __end_of__initialization 0013           __pcstackCOMMON 0070  
          __end_of_setup 00A9           _OPTION_REGbits 0081                  ??_setup 0075  
             __pmaintext 00DD               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094                ?_spiWrite 0070                  __ptext1 0067  
                __ptext2 00A9                  __ptext3 00C7                  __ptext4 0017  
                __ptext5 00F6                  __ptext6 00E6                  __ptext7 00EF  
           __size_of_ADC 0016             __size_of_isr 0050                  _spiInit 00A9  
                _spiRead 00E6     end_of_initialization 0013               ??_spiWrite 0070  
              _TRISAbits 0085              spiWrite@dat 0070           _spiReceiveWait 00EF  
    start_initialization 000F              __end_of_ADC 00DD              __end_of_isr 0067  
 __end_of_spiReceiveWait 00F6              __pbssCOMMON 0075                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_spiWrite 0006  
               ?_spiInit 0020                 ?_spiRead 0070           __size_of_setup 0042  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F         __size_of_spiInit 001E         __size_of_spiRead 0009  
          __size_of_main 0009                 _temporal 0078                 _spiWrite 00F6  
           spiInit@sType 0074        spiInit@sClockIdle 0021               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
